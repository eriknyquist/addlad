# AddLad program that reads one byte from stdin, then prints 'uppercase' if the
# read byte is an ASCII uppercase letter or 'lowercase' otherwise.
#
# Erik K. Nyquist, 2023

263,-1;     # Add '1' it to index 263
263,263;    # Put '2' in index 263, for arithmetic later
264,263;
264,264;    # Put '4' in index 264, for arithmetic later
265,264;
265,265;    # Put '8' in index 265, for arithmetic later
266,265;
266,266;    # Put '16' in index 266, for arithmetic later

# Generate required printable characters

267,266;    # Put ASCII 'a' (97) at index 267
267,267;
267,267;
267,266;
267,266;
267,-1;
268,267;    # Put ASCII 'c' (99) at index 268
268,263;
269,268;    # Put ASCII 'e' (101) at index 269
269,263;
270,269;    # Put ASCII 'l' (108) at index 270
270,264;
270,263;
270,-1;
271,270;    # Put ASCII 'o' (111) at index 271
271,263;
271,-1;
272,271;    # Put ASCII 'p' (112) at index 272
272,-1;
273,272;    # Put ASCII 'r' (114) at index 273
273,263;
274,273;    # Put ASCII 's' (115) at index 274
274,-1;
275,274;    # Put ASCII 'u' (117) at index 275
275,263;
276,275;    # Put ASCII 'w' (119) at index 276
276,263;
277,265;    # Put newline at index 277
277,263;

# Fill indices 65 through 90 (ASCII 'A' through 'Z') with a value of '1'
65,-1;
66,-1;
67,-1;
68,-1;
69,-1;
70,-1;
71,-1;
72,-1;
73,-1;
74,-1;
75,-1;
76,-1;
77,-1;
78,-1;
79,-1;
80,-1;
81,-1;
82,-1;
83,-1;
84,-1;
85,-1;
86,-1;
87,-1;
88,-1;
89,-1;
90,-1;

260,-2;     # Read one character from stdin, into index 260
261,[260];  # Read result into index 261 (1 = uppercase, 0 = lowercase)

0,264;      # Put jump value for lowercase (7 ops) into index 0
0,263;
0,-1;
            # (index 1 has jump value for uppercase, which is '0')
2,264;      # Put end jump value (6 ops) in index 2
2,263;

-3,[261];   # Jump ahead 0 (if uppercase) or 7 (if lowercase)

-1,275;     # Print 'u'
-1,272;     # Print 'p'
-1,272;     # Print 'p'
-1,269;     # Print 'e'
-1,273;     # Print 'r'

-3,2;       # Jump ahead 6 operations

-1,270;     # Print 'l'
-1,271;     # Print 'o'
-1,276;     # Print 'w'
-1,269;     # Print 'e'
-1,273;     # Print 'r'

-1,268;     # Print 'c'
-1,267;     # Print 'a'
-1,274;     # Print 's'
-1,269;     # Print 'e'
-1,277;     # Print '\n'
