0,-1;  # Put value of '2' in array index 0, for arithmetic later
0,0;
1,0;   # Put value of '4' in array index 1, for arithmetic later
1,1;
2,1;   # Put value of '8' in array index 2, for arithmetic later
2,2;
3,2;   # Put value of 16' in array index 3, for arithmetic later
3,3;
4,-1;  # Put ASCII 'H' (72) in array index 4
4,4;
4,4;
4,4;
4,4;
4,4;
4,4;
4,1;
4,1;
5,4;   # Put ASCII 'I' (73) in array index 5
5,-1;
6,1;   # Put newline char in array index 6
6,6;
6,0;

# Calculate first jump value of 255 in array index 7
7,3;
7,7;
7,7;
7,7;
7,3;
7,3;
7,3;
7,3;
7,3;
7,3;
7,3;
7,2;
7,1;
7,0;
7,-1;

# Calculate second jump value of 6 in array index 8
8,1;
8,0;

# Increment instruction pointer by 255 (comment out to see the newlines get printed)
-3,7;

# Write a bunch of newlines to stdout, 245 operations in total
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6; -1,6;
-1,6; -1,6; -1,6; -1,6; -1,6;

# Set second jump value back to 0, so we do nothing if first jump is not taken.
# Adds 9 more operations.
8,8;
8,8;
8,8;
8,8;
8,8;
8,3;
8,3;
8,3;
8,3;

# Increment instruction pointer by 6 (or 0 if the first jump was not taken)
-3,8;

# 5 more newline print operations after the jump
-1,6; -1,6; -1,6; -1,6; -1,6;

-1,4;  # Print all 3 chars
-1,5;
-1,6;
